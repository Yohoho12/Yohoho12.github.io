---
layout: post
title:  "PerformanceTesting chapter2"
date:   2018-02-25 17:22:18 +0530
categories: PerformanceTest
---
# 성능 테스트의 종류

## 성능 테스트란?
성능 테스트는 테스트중인 제품의 속도, 확장성 또는 안정성 특성을 확인하거나 검증하기 위해 수행 된 기술 조사로 정의된다. 테스트 및 튜닝과 같은 성능 관련 활동은 테스트중인 애플리케이션의 성능 목표를 충족시키는 응답 시간, 처리량 및 리소스 사용 수준 달성과 관련이 있다. 성능 테스트는 다양한 하위 집합 전체를 포괄하는 일반적인 용어이므로이 장의 다른 성능 테스트 유형에 나열된 모든 가치와 이점은 일반적으로 성능 테스트의 잠재적 이점으로 간주 될 수 있다.

## 성능 테스트의 주요 유형
1. Performance test
  - purpose : 속도, 확장성, 안정성을 확인하거나 검사하기 위해
  - benefit
    - 애플리케이션의 속도, 확장성 및 안정성 특성을 확인함으로써 올바른 비즈니스 결정을 내리는데 필요한 정보 제공
    - 시스템의 사용자가 시스템의 성능에 만족하는지 판단하는데 중점
    - 성능 관련 기대와 실제의 불일치 확인
    - 튜닝, 용량 계획 및 최적화 작업 지원
  - not addressed
    - 로드 아래에서만 일어나는 기능 실패를 확인하지 못할 수 있음
    - 신중하게 디자인하고 검증하지 못하면 오직 적은 수의 시나리오에 대해서만 검증하게 됨
    - 테스트가 사용자가 사용할 하드웨어와 같은 환경에서 실행되지 않는한 결과에 불확실성이 있음
  - 필요 상황
    - 시스템이 적절하게 동작하는지 확인해야 할때
2. Load test
  - purpose
    - 프로그램의 동작을 정상, 최대 로드 조건에서 검사하기 위해
  - benefit
    - 예상 최대 생산 로드를 지원하는데 필요한 처리량 확인
    - 하드웨어 환경의 적합성 확인
    - 로드 밸런서의 적합성 확인
    - 동시성 문제 감지
    - 확장성과 확장성을 위한 데이터 수집
    - 성능이 저하되기 전에 시스템이 처리 할수 있는 사용자 수 확인
    - 리소스 사용률 한도를 초과하기 전에 하드웨어가 처리 할수 있는 로드양을 확인
  - not addressed
    - 반응의 속도에 초점이 맞춰저 있지 않음
    - 다른 load test와만 비교 가능
  - 필요 상황
    - 시스템이 얼마나 많은 유저를 수용할 수 있는지 확인하기 위해
3. Stress test
  - purpose : 정상, 최대 로드상태를 초과 했을때 프로그램의 동작을 확인하거나 검사하기 위해
  - benefit
    - 시스템이 과부하로 인해 데이터가 손상될 수 있는지 확인
    - 속도 저하 뿐 아니라 오류 및 오류를 유발하기 전에 시스템이 얼마나 망ㄶ은 대상 부하를 초과하는지 평가
    - 임박한 장애를 경고하기 위해 응용 프로그램 모니터링 트리거 설정 가능
    - 스트레스가 많은 상황에서 보안 취약성이 열리지 않도록 보장
    - 일반 하드웨어 또는 지원 응용프로그램 오류의 부작용 확인
  - not addressed
    - 현실적이지 않은 상황의 테스트이기 때문에 stakeholder가 신뢰하지 않을 수 있음
    - 얼마나 많은 스트레스가 적합할지 알기 어려움
    - 네트워크가 관련되어 있기 때문에 독립적인 테스트가 어려움
  - 필요 상황
    - 시스템이 유저 한계를 넘을 때 적절히 대응하는지 확인하기 위해
4. Capacity test
  - purpose : 프로그램이 얼마나 많은 사용자나 트랜잭션을 지원하고 성능을 충족시킬지 확인
  - benefit
    - 비즈니스 요구 사항을 충족하기 위해 작업 부하를 처리하는 방법에 대한 정보를 제공
    - 용량 계획자가 모델 및 예측을 검증하거나 향상시키는데 사용할 수 있는 실제 데이터 제공
    - 용량 계획 모델 및 예측을 비교하기위한 다양한 테스트 수행 가능
  - not addressed
    - Capacity model validation test는 만들기 복잡함
    - 한번에 모든 측면의 capacity-planning model을 검사하지 못함
  - 필요 상황
    - 시스템이 scale up을 해야할지 결정해야 할 때

## 다른 컨셉의 성능 테스트
1. Component test
  - 아키텍처 구성요소를 대상으로 하는 성능 테스트
  - 주로 서버, 데이터베이스, 네트워크, 방화벽, 클라이언트 및 저장 장치
2. Investigation
  - 테스트 중인 시스테므이 속도, 확장성 및 안정성 특성과 관련된 정보수집에 기반을 둔 활동
3. Smoke test
  - 보통 로드의 상황에서 알맞은 동작을 하는지 확인
4. Unit test
  - 하나의 모듈에 대해서만 해당 동작을 하는지 확인
5. Validation test
  - 테스트 중인 제품의 속도, 확장성 및 안정성 특성을 기대치와 비교
