---
layout: post
title:  "PerformanceTesting chapter3"
date:   2018-02-25 19:49:41 +0530
categories: PerformanceTest
---
# 성능 테스트로 인해 제기되는 위험
## 위험의 종류
### Capacity
  - 정상 및 최대 부하 조건에서 시스템 용량을 비즈니스 볼륨 충족하는가
### Component
  - 이 component는 기대에 부합하며 최적화 되어있는가
### Endurance
  - 시간이 지나도 성능이 유지되는가
  - 아직 발견되지 않은 문제가 커지고 있는가
  - 설명되지 않은 외부간섭이 되어있는가
### Investigation
  - 시간 경과에 따른 실적추이는 어느 방법인가
  - 미래 테스트를 어떻게 비교해야하는가
### Load
  - 응용 프로그램이 특정 작업 부하를 받을 때 옳지 않은 동작이 발생하기 전 시스템에서 처리 할 수있는 사용자수는 몇 명인가
  - DB/파일 서버에서 처리 할 수있는 데이터의 양은 얼마인가
  - 네트워크 구성요소가 적절한가
### Smoke
  - 추가 성능 테스트를 위해 빌드를 사용할 준비가 되었는가
  - 다음 수행해야하는 성능 테스트 유형은 무엇인가
  - 이번 빌드는 이전 것보다 나쁜가 좋은가
### Spike
  - 생산 부하가 예상 최대 부하를 초과하면 어떻게 되는가
  - 어떤 종류의 실패를 계획해야하는가
  - 어떤 지표를 찾아야 하는가  
### Stress
  - 생산 부하가 예상 최대 부하를 초과하면 어떻게 되는가
  - 어떤 종류의 실패를 계획해야하는가
  - 실패 이전에 돌입하기 전 어떤 지표를 찾아야 하는가
### Unit
  - 코드 세그먼트가 비교적 효율적인가
  - 성능 예산안에 머물렀는가
  - 이 코드는 부하 내에서 예상대로 수행되는가
### validation
  - 시스템이 목표와 요구사항을 충족하는가
  - 현재 버전이 이전 버전보다 빠른가 느린가
  - 계약 / 서비스 수준계약을 위반할 수 있는가

## 속도 관련 위험
속도 관련 위험은 대부분의 사람들이 먼저 생각하는 것이지만 최종 사용자 만족도에 국한되지 않는다.
* 응용 프로그램이 최종 사용자를 만족시킬만큼 충분히 빠른가
* 데이터가 오래되기 전에 애플리케이션이 수집 한 데이터를 처리하고 활용할 수 있는가
* 응용 프로그램은 사용자에게 최신 정보를 제공 할 수 있는가
* 오류가 발생하기 전에 최대 예상 응답 시간 내에 웹 서비스가 응답하는가

## 확장성 관련 위험
확장성 위험은 시스템이 지원할 수있는 사용자 수뿐만 아니라 시스템이 포함하고 처리할 수있는 데이터의 양, 시스템이 용량에 접근하는 시점을 식별할 수있는 능력이다.
* 애플리케이션이 전체 사용자 기반에 대해 일관되고 수용 가능한 응답 시간을 제공 할 수 있는가
* 응용 프로그램은 응용 프로그램 수명 동안 수집되는 모든 데이터를 저장할 수 있는가
* 응용 프로그램이 최대 용량에 근접하고 있음을 나타내는 경고 신호가 있는가
* 과도한 사용으로도 응용 프로그램의 보안이 유지되는가
* 과도한 사용으로 인해 기능이 손상되는가
* 응용 프로그램이 예상치 못한 최고 부하를 견딜 수 있는가

## 안정성 관련 위험
안정성은 신뢰성, 가동 시간 및 복구 가능성과 같은 영역을 포괄하는 포괄적 용어이다. 고부하, 내구성 및 스트레스 테스트에서는 안정성 위험이 일반적으로 해결되지만 가장 기본적인 성능 테스트에서는 안정성 문제가 종종 감지된다.
* 데이터 손상, 지연 또는 서버를 재부팅 할 필요없이 오랜 시간 동안 응용 프로그램을 실행할 수 있는가
* 응용 프로그램이 예기치 않게 다운 된 경우 부분적으로 완료된 트랜잭션은 어떻게 되는가
* 예약 된 또는 예정되지 않은 다운 타임 이후에 응용 프로그램이 다시 온라인 상태로 전환되면 사용자는 여전히 예상 한 모든 것을보고 수행 할 수 있는가
* 예정되지 않은 중단 시간 이후에 응용 프로그램이 다시 온라인 상태가되면 올바른 시점에 다시 시작됩니까? 특히, 취소 된 트랜잭션을 재개하려고하지 않는가
* 오류 조합이나 반복되는 기능 오류로 인해 시스템이 중단 될 수 있는가
* 시스템 전체에 부작용을 일으키는 트랜잭션이 있는가
* 로드 밸런싱 환경의 한쪽 다리를 내리고 사용자에게 중단없는 서비스를 제공 할 수 있는가
* 시스템을 패치하지 않고 업데이트 할 수 있는가
